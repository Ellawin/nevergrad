# Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

# The source code in this module was created by Antoine Moreau
# from University Clermont Auvergne, CNRS, SIGMA Clermont, Institut Pascal.
#
# Publication:
# - Aliou Barry, Mamadou; Berthier, Vincent; Wilts, Bodo D.; Cambourieux, Marie-Claire; Pollès, Rémi;
#   Teytaud, Olivier; Centeno, Emmanuel; Biais, Nicolas; Moreau, Antoine (2018)
#   Evolutionary algorithms converge towards evolved biological photonic structures,
#   https://arxiv.org/abs/1808.04689
# - Defrance, J., Lemaître, C., Ajib, R., Benedicto, J., Mallet, E., Pollès, R., Plumey, J.-P.,
#   Mihailovic, M., Centeno, E., Ciracì, C., Smith, D.R. and Moreau, A., 2016.
#   Moosh: A Numerical Swiss Army Knife for the Optics of Multilayers in Octave/Matlab. Journal of Open Research Software, 4(1), p.e13.

import typing as tp
import numpy as np
from scipy.linalg import toeplitz
# pylint: disable=blacklisted-name,too-many-locals,too-many-arguments


def bragg(X: np.ndarray) -> float:
    """
        Cost function for the Bragg mirror problem: maximizing the reflection
        when the refractive index are given for all the layers.
        Input: a vector whose components represent each the thickness of each
        layer.
        https://hal.archives-ouvertes.fr/hal-02613161
    """
    lam = 600
    bar = int(np.size(X) / 2)
    n = np.concatenate(([1], np.sqrt(X[0:bar]), [1.7320508075688772]))
    Type = np.arange(0, bar + 2)
    hauteur = np.concatenate(([0], X[bar : 2 * bar], [0]))
    tmp = np.tan(2 * np.pi * n[Type] * hauteur / lam)
    # Specific to this substrate.
    Z = n[-1]
    for k in range(np.size(Type) - 1, 0, -1):
        Z = (Z - 1j * n[Type[k]] * tmp[k]) / (1 - 1j * tmp[k] * Z / n[Type[k]])
    # Specific to air.
    r = (1 - Z) / (1 + Z)
    c = np.real(1 - r * np.conj(r))
    return float(c)


def chirped(X: np.ndarray) -> float:
    lam = np.linspace(500, 800, 50)
    n = np.array([1, 1.4142135623730951, 1.7320508075688772])
    Type = np.concatenate(([0], np.tile([2, 1], int(np.size(X) / 2)), [2]))
    hauteur = np.concatenate(([0], X, [0]))
    r = np.zeros(np.size(lam)) + 0j
    for m in range(0, np.size(lam)):
        # Specific to this substrate.
        tmp = np.tan(2 * np.pi * n[Type] * hauteur / lam[m])
        Z = 1.7320508075688772
        for k in range(np.size(Type) - 1, 0, -1):
            Z = (Z - 1j * n[Type[k]] * tmp[k]) / (1 - 1j * tmp[k] * Z / n[Type[k]])
        # Specific to air.
        r[m] = (1 - Z) / (1 + Z)
    # c=1-np.mean(abs(r)**2)
    c = 1 - np.real(np.sum(r * np.conj(r)) / np.size(lam))
    return float(c)


def cascade(T: np.ndarray, U: np.ndarray) -> np.ndarray:
    n = int(T.shape[1] / 2)
    J = np.linalg.inv(np.eye(n) - np.matmul(U[0:n, 0:n], T[n : 2 * n, n : 2 * n]))
    K = np.linalg.inv(np.eye(n) - np.matmul(T[n : 2 * n, n : 2 * n], U[0:n, 0:n]))
    S = np.block(
        [
            [
                T[0:n, 0:n]
                + np.matmul(
                    np.matmul(np.matmul(T[0:n, n : 2 * n], J), U[0:n, 0:n]),
                    T[n : 2 * n, 0:n],
                ),
                np.matmul(np.matmul(T[0:n, n : 2 * n], J), U[0:n, n : 2 * n]),
            ],
            [
                np.matmul(np.matmul(U[n : 2 * n, 0:n], K), T[n : 2 * n, 0:n]),
                U[n : 2 * n, n : 2 * n]
                + np.matmul(
                    np.matmul(np.matmul(U[n : 2 * n, 0:n], K), T[n : 2 * n, n : 2 * n]),
                    U[0:n, n : 2 * n],
                ),
            ],
        ]
    )
    return S  # type: ignore


def c_bas(A: np.ndarray, V: np.ndarray, h: float) -> np.ndarray:
    n = int(A.shape[1] / 2)
    D = np.diag(np.exp(1j * V * h))
    S = np.block(
        [
            [A[0:n, 0:n], np.matmul(A[0:n, n : 2 * n], D)],
            [
                np.matmul(D, A[n : 2 * n, 0:n]),
                np.matmul(np.matmul(D, A[n : 2 * n, n : 2 * n]), D),
            ],
        ]
    )
    return S  # type: ignore


def marche(a: float, b: float, p: float, n: int, x: float) -> np.ndarray:
    l = np.zeros(n, dtype=np.complex)  # noqa
    m = np.zeros(n, dtype=np.complex)
    tmp = (
        1
        / (2 * np.pi * np.arange(1, n))
        * (np.exp(-2 * 1j * np.pi * p * np.arange(1, n)) - 1)
        * np.exp(-2 * 1j * np.pi * np.arange(1, n) * x)
    )
    l[1:n] = 1j * (a - b) * tmp
    l[0] = p * a + (1 - p) * b
    m[0] = l[0]
    m[1:n] = 1j * (b - a) * np.conj(tmp)
    T = toeplitz(l, m)
    return T  # type: ignore


def creneau(k0: float, a0: float, pol: float, e1: float, e2: float, a: float, n: int, x0: float) -> tp.Tuple[np.ndarray, np.ndarray]:
    nmod = int(n / 2)
    alpha = np.diag(a0 + 2 * np.pi * np.arange(-nmod, nmod + 1))
    if pol == 0:
        M = alpha * alpha - k0 * k0 * marche(e1, e2, a, n, x0)
        L, E = np.linalg.eig(M)
        L = np.sqrt(-L + 0j)
        L = (1 - 2 * (np.imag(L) < -1e-15)) * L
        P = np.block([[E], [np.matmul(E, np.diag(L))]])
    else:
        U = marche(1 / e1, 1 / e2, a, n, x0)
        T = np.linalg.inv(U)
        M = (
            np.matmul(
                np.matmul(np.matmul(T, alpha), np.linalg.inv(marche(e1, e2, a, n, x0))),
                alpha,
            )
            - k0 * k0 * T
        )
        L, E = np.linalg.eig(M)
        L = np.sqrt(-L + 0j)
        L = (1 - 2 * (np.imag(L) < -1e-15)) * L
        P = np.block([[E], [np.matmul(np.matmul(U, E), np.diag(L))]])
    return P, L


def homogene(k0: float, a0: float, pol: float, epsilon: float, n: int) -> tp.Tuple[np.ndarray, np.ndarray]:
    nmod = int(n / 2)
    valp = np.sqrt(
        epsilon * k0 * k0 - (a0 + 2 * np.pi * np.arange(-nmod, nmod + 1)) ** 2 + 0j
    )
    valp = valp * (1 - 2 * (valp < 0)) * (pol / epsilon + (1 - pol))
    P = np.block([[np.eye(n)], [np.diag(valp)]])
    return P, valp


def interface(P: np.ndarray, Q: np.ndarray) -> np.ndarray:
    n = int(P.shape[1])
    S = np.matmul(
        np.linalg.inv(
            np.block(
                [[P[0:n, 0:n], -Q[0:n, 0:n]], [P[n : 2 * n, 0:n], Q[n : 2 * n, 0:n]]]
            )
        ),
        np.block([[-P[0:n, 0:n], Q[0:n, 0:n]], [P[n : 2 * n, 0:n], Q[n : 2 * n, 0:n]]]),
    )
    return S  # type: ignore


def morpho(X: np.ndarray) -> float:
    lam = 449.5897
    pol = 1.0
    d = 600.521475
    nmod = 25
    # nmod=1
    e2 = 2.4336
    n = 2 * nmod + 1
    n_motifs = int(X.size / 4)
    X = X / d
    h = X[0:n_motifs]
    x0 = X[n_motifs : 2 * n_motifs]
    a = X[2 * n_motifs : 3 * n_motifs]
    spacers = X[3 * n_motifs : 4 * n_motifs]
    l = lam / d  # noqa
    k0 = 2 * np.pi / l
    P, V = homogene(k0, 0, pol, 1, n)
    S = np.block(
        [[np.zeros([n, n]), np.eye(n, dtype=np.complex)], [np.eye(n), np.zeros([n, n])]]
    )
    for j in range(0, n_motifs):
        Pc, Vc = creneau(k0, 0, pol, e2, 1, a[j], n, x0[j])
        S = cascade(S, interface(P, Pc))
        S = c_bas(S, Vc, h[j])
        S = cascade(S, interface(Pc, P))
        S = c_bas(S, V, spacers[j])
    Pc, Vc = homogene(k0, 0, pol, e2, n)
    S = cascade(S, interface(P, Pc))
    R = np.zeros(3, dtype=np.float)
    for j in range(-1, 2):
        R[j] = abs(S[j + nmod, nmod]) ** 2 * np.real(V[j + nmod]) / k0
    cost: float = 1 - (R[-1] + R[1]) / 2 + R[0] / 2

    lams = (np.array([400, 500, 600, 700, 800]) + 0.24587) / d
    bar = 0
    for lo in lams:
        k0 = 2 * np.pi / lo
        P, V = homogene(k0, 0, pol, 1, n)
        S = np.block(
            [
                [np.zeros([n, n], dtype=np.complex), np.eye(n)],
                [np.eye(n), np.zeros([n, n])],
            ]
        )
        for j in range(0, n_motifs):
            Pc, Vc = creneau(k0, 0, pol, e2, 1, a[j], n, x0[j])
            S = cascade(S, interface(P, Pc))
            S = c_bas(S, Vc, h[j])
            S = cascade(S, interface(Pc, P))
            S = c_bas(S, V, spacers[j])
        Pc, Vc = homogene(k0, 0, pol, e2, n)
        S = cascade(S, interface(P, Pc))
        bar += abs(S[nmod, nmod]) ** 2 * np.real(V[nmod]) / k0
    cost += bar / lams.size
    return cost

# Toutes les fonctions necessaires à l'execution de photosic
i=complex(0,1)
def epscSi(lam):
     a=np.arange(250,1500,5)
     e=np.array([-10.70150017788+i*11.479928294218,-12.04961810768+i*12.382755672798,-13.66990089446+i*13.678678027008,-15.731858468655+i*15.644025348952,-18.13224875496+i*18.988716272768,-19.741192645808+i*24.260541634494,-19.424585306553+i*30.814297069904,-16.933685607312+i*38.326884809666,-8.716621654499999+i*45.95909063920001,1.992290470951001+i*45.49379667288,7.700562954887001+i*41.66128071638401,10.60143488718899+i*38.36698892614,12.239041842408+i*35.940668634794,13.392637871085+i*34.278211457892,14.336496386688+i*33.161505594034,15.288650972988+i*32.393879089984,16.2241107312+i*31.858989897728,17.21072882232+i*31.539843619982,18.19623667554+i*31.453633635408,19.260848989827+i*31.698827981964,20.600025480993+i*32.478633693224,22.866737500224+i*34.13575138813,27.631417581864+i*36.17300220831,35.740409357037+i*34.877031679484,42.234386560135+i*27.742356743352,43.42772775192+i*18.920905856768,40.942988869328+i*12.549211322304,37.79176665249901+i*8.887128130980001,35.027806428081+i*6.658391476759999,32.744367801589+i*5.221459407779999,30.873752699217+i*4.305397975544,29.32810002835199+i*3.593663536014,27.978012785117+i*3.132178541244,26.83275762328+i*2.701886091102,25.842595528915+i*2.419906143708,24.986036008107+i*2.106347356476,24.207280288576+i*1.9262594112,23.51059563776+i*1.795720514952,22.889624711733+i*1.625908935844,22.341066291072+i*1.451387072096,21.827073864405+i*1.353102349508,21.358763850525+i*1.2160532435,20.92566961944+i*1.192340046898,20.522239034352+i*1.205928626686,20.164723624281+i*1.08584032252,19.831149215295+i*0.940133289272,19.528791353216+i*0.82521081675,19.238312204188+i*0.724843339584,18.964949580625+i*0.6794697,18.70581303778+i*0.639816134448,18.466752487092+i*0.622439938544,18.24376546152+i*0.579693296322,18.025594851861+i*0.56703501074,17.826879597901+i*0.50656178586,17.638859265316+i*0.4782236639999999,17.458299469897+i*0.4441738866960001,17.290442389291+i*0.36549928854,17.121520057761+i*0.37580251104,16.970183412575+i*0.387001639128,16.822723248185+i*0.362237190168,16.6819771988+i*0.329680933698,16.549717681243+i*0.278099347524,16.422411499008+i*0.291456109406,16.301437753113+i*0.264739782816,16.181918346651+i*0.26464457866,16.072981478357+i*0.236720444724,15.963136028616+i*0.22092634759,15.861233387759+i*0.23749007064,15.760814624163+i*0.237578843884,15.668977758528+i*0.218303468296,15.580218399083+i*0.202644536556,15.49713043452+i*0.197001292198,15.414440689456+i*0.1932632688,15.332501472925+i*0.1849014789,15.255448383064+i*0.17278854063,15.174647795+i*0.171192829542,15.10442571152+i*0.157371915048,15.03498533184+i*0.144384153912,14.964354459664+i*0.13814901504,14.894729297249+i*0.13214609568,14.831472840679+i*0.1262346336,14.772105123093+i*0.123099073524,14.716407771099+i*0.12199978646,14.657010226395+i*0.117021258548,14.598307559376+i*0.11145276517,14.5422536207+i*0.105968315328,14.490432558309+i*0.10057177226,14.443607822433+i*0.09899534585600001,14.399016307851+i*0.09900179233999999,14.355057229641+i*0.09820644767999999,14.311726690625+i*0.0947289492,14.268049695387+i*0.090028787884,14.22166179588+i*0.085749068102,14.183078333177+i*0.08321483966400001,14.150347942497+i*0.082998391504,14.112059876664+i*0.07930218487,14.074310854855+i*0.075654523608,14.042959103613+i*0.07499310888399999,14.009474622975+i*0.07306959659200001,13.97195342372+i*0.06893470219800001,13.937731802144+i*0.06712541724,13.904890437713+i*0.06700154001600001,13.87567832532+i*0.06379464114199999,13.847949411148+i*0.05988303086399999,13.820590888771+i*0.05899853418,13.792322952219+i*0.05837366558,13.75927380624+i*0.055291675442,13.726351886895+i*0.052750594008,13.695856486179+i*0.0519962119,13.66629689136+i*0.051296824552,13.63412969622+i*0.04816429171200001,13.603387181595+i*0.044827379428,13.577833312956+i*0.04399670304,13.55067530024+i*0.043812797358,13.484815983015+i*0.041032849928,13.464088806455+i*0.037375978728,13.443364325193+i*0.037809185176,13.42348944846+i*0.039407961872,13.403453170553+i*0.041179794096,13.38382688286+i*0.042920301872,13.364514636087+i*0.044651403784,13.345070126191+i*0.04635778824,13.326501210516+i*0.04804129064,13.307332276215+i*0.04970666692799999,13.28906652184+i*0.051356733312,13.271148395172+i*0.052983297504,13.253140344032+i*0.054592848024,13.234919871117+i*0.055719470156,13.217606225856+i*0.05335621236,13.200486603616+i*0.05035690044,13.183552189984+i*0.04727460444,13.166613724719+i*0.04423248772,13.149301384545+i*0.041222652968,13.13286254176+i*0.038246988882,13.116658170287+i*0.035297049216,13.100637170613+i*0.032387133884,13.084777548597+i*0.029502625396,13.069093488288+i*0.026650679384,13.053577473821+i*0.0238311831,13.038222015232+i*0.021036806274,13.023026846512+i*0.018274679616,13.007631680091+i*0.01444807966,12.9921156728+i*0.009674365272000001,12.977393472225+i*0.004322897999999999,12.962822523388+i*0.001252936416,12.948403395321+i*0,12.934128924025+i*0,12.920322415225+i*0,12.906968761129+i*0,12.893169578436+i*0,12.879456729616+i*0,12.865887479025+i*0,12.852454441024+i*0,12.839143080625+i*0,12.825967544896+i*0,12.812927635225+i*0,12.8000088441+i*0,12.787210998241+i*0,12.774541074201+i*0,12.762534755961+i*0,12.750562648849+i*0,12.738246388624+i*0,12.726050234881+i*0,12.713966892225+i*0,12.702003336169+i*0,12.690145156329+i*0,12.678791011441+i*0,12.667676852224+i*0,12.656226038481+i*0,12.644794626304+i*0,12.6334750096+i*0,12.622252833961+i*0,12.611625151225+i*0,12.601108438416+i*0,12.590191606756+i*0,12.5793646276+i*0,12.569109546436+i*0,12.558957875044+i*0,12.548463149161+i*0,12.538015300836+i*0,12.528031934016+i*0,12.518229448321+i*0,12.508204449636+i*0,12.498112761289+i*0,12.488329057689+i*0,12.478860046849+i*0,12.469345190416+i*0,12.459593934225+i*0,12.449924118025+i*0,12.440773013904+i*0,12.4316887396+i*0,12.422389260681+i*0,12.413029843369+i*0,12.403899354889+i*0,12.3951172489+i*0,12.386408641489+i*0,12.377766422025+i*0,12.369197558169+i*0,12.360491031001+i*0,12.351654018064+i*0,12.342897456516+i*0,12.334600564225+i*0,12.326362635664+i*0,12.318197653441+i*0,12.310091513476+i*0,12.302051175184+i*0,12.293739975049+i*0,12.285452613721+i*0,12.277301194404+i*0,12.269509761796+i*0,12.261776829124+i*0,12.254102343396+i*0,12.246486252004+i*0,12.238928502724+i*0,12.231429043716+i*0,12.223987823524+i*0,12.216597800625+i*0,12.209265918976+i*0,12.201985141956+i*0,12.19476241+i*0,12.187597673476+i*0,12.180476922916+i*0,12.173414077764+i*0,12.166402113369+i*0,12.159434013444+i*0,12.152502769936+i*0,12.145315610169+i*0,12.138179352121+i*0,12.131093952784+i*0,12.1388831281+i*0,12.146821182441+i*0,12.154699076881+i*0,12.153388241241+i*0,12.150278775625+i*0,12.147197590089+i*0,12.144130734649+i*0,12.141092141649+i*0,12.138067864729+i*0,12.135071832849+i*0,12.132090103225+i*0,12.1291296361+i*0,12.126190423824+i*0,12.123272458801+i*0,12.120375733489+i*0,12.117493278361+i*0,12.114639010881+i*0,12.111799000401+i*0,12.108973242025+i*0,12.106175648449+i*0,12.103392294049+i*0,12.100623174025+i*0])
     x=np.min(np.sign(lam-a))
     y=np.argmin(np.sign(lam-a))
     #[x,y]=np.min((np.sign(lam-a)))
     y=y-1;
     epsilon=(e[y+1]-e[y])/(a[y+1]-a[y])*(lam-a[y])+e[y]
     return(epsilon)

def cascade2(A,B):
    """
    This function takes two 2x2 matrices A and B, that are assumed to be scattering matrices
    and combines them assuming A is the "upper" one, and B the "lower" one, physically.
    The result is a 2x2 scattering matrix.
    """
    t=1/(1-B[0,0]*A[1,1])
    S=np.zeros((2,2),dtype=complex)
    S[0,0]=A[0,0]+A[0,1]*B[0,0]*A[1,0]*t
    S[0,1]=A[0,1]*B[0,1]*t
    S[1,0]=B[1,0]*A[1,0]*t
    S[1,1]=B[1,1]+A[1,1]*B[0,1]*B[1,0]*t
    return(S)

def solar(lam):
    a2=np.arange(280, 400, 0.5)
    a3=np.arange(400,1700,1)
    a4=np.arange(1700,4001,5)
    a=np.append(a2,np.append(a3,np.append(np.array([1700,1702]),a4)))
    e=np.array([1.065339187763039e-27,2.776330532212098e-26,1.285779581177973e-25,3.545779475655973e-24,2.709303897354827e-23,1.032296954384578e-22,4.199677915412361e-22,8.062160180999874e-22,1.659814687331175e-20,5.687214571918009e-20,1.836923792658453e-19,9.784402854278547e-19,3.147496107181308e-18,1.931407570427873e-17,6.316771859540225e-17,2.52098327311767e-16,1.44385801681531e-15,3.981986819181418e-15,1.307742593258595e-14,4.830942204138283e-14,1.403297257868835e-13,3.220149210694188e-13,8.203362347209513e-13,2.558402184944362e-12,6.300711974951335e-12,1.004123795885795e-11,2.037506917686444e-11,5.359866448601682e-11,9.870235051825085e-11,1.561094892829915e-10,2.915815242187597e-10,6.612936752093509e-10,1.140380001795021e-09,1.701274306010775e-09,2.312160138097572e-09,4.45218057478768e-09,6.94737305172433e-09,8.59171776509539e-09,1.183367074819127e-08,2.073120952303742e-08,2.4621832174311e-08,3.008845797038599e-08,4.672076095058792e-08,6.526069094513509e-08,7.094303020930719e-08,1.042223698612163e-07,1.728822971526271e-07,2.19177996732974e-07,2.315337210964514e-07,2.927186000776409e-07,4.038265982071959e-07,4.599175285378684e-07,4.571756705813024e-07,5.203117905555669e-07,6.875971749020835e-07,8.812679708670868e-07,9.372458249409015e-07,1.027912635648721e-06,1.007312087911933e-06,1.077940595628125e-06,1.269983889692768e-06,1.636643705564915e-06,2.074035856640881e-06,2.10638065239525e-06,2.343019822785696e-06,2.487717862916464e-06,2.701789875535308e-06,2.712156941602365e-06,3.022550864557215e-06,3.30331454573901e-06,3.451700995039068e-06,3.003750127312763e-06,3.13812187638517e-06,3.827296730469889e-06,4.374334890532242e-06,4.658796068804397e-06,4.499640433035939e-06,4.762097582946535e-06,5.251636144700268e-06,5.033490250295404e-06,5.282768306172342e-06,6.321543822342978e-06,6.460228312719803e-06,6.164927576909008e-06,5.749811850554473e-06,5.630612506345189e-06,5.513873334751327e-06,6.46813359768983e-06,7.175426790697917e-06,7.391105274320132e-06,7.290885208813495e-06,8.491108447040252e-06,9.994396963907359e-06,1.06929709802531e-05,1.046845027112573e-05,1.013125261069887e-05,9.263284168925642e-06,9.818472505282442e-06,1.117517928921073e-05,1.242254551480948e-05,1.251066537531927e-05,1.13763078503511e-05,1.071789359848761e-05,1.114572316557145e-05,1.164768764984713e-05,1.174438272791558e-05,1.15009265712093e-05,1.092275946663808e-05,1.114677591678217e-05,1.197374657515674e-05,1.249788598896455e-05,1.222648005164243e-05,1.121946802597398e-05,1.034174132842133e-05,1.013106964591626e-05,1.087109383111216e-05,1.180055935010378e-05,1.239406614162508e-05,1.263811743652534e-05,1.295464409772109e-05,1.372131318283047e-05,1.371164258929854e-05,1.292768755449658e-05,1.289061486833545e-05,1.345931404805701e-05,1.398389579430629e-05,1.420347725854395e-05,1.342856269460501e-05,1.157623567997306e-05,1.116749597470224e-05,1.273500030482122e-05,1.359649983569802e-05,1.329505590651589e-05,1.355921885116899e-05,1.37872512777613e-05,1.332362816951301e-05,1.329717910223499e-05,1.354751352840626e-05,1.306958538900054e-05,1.343713268459846e-05,1.486180706512316e-05,1.599451629856621e-05,1.557442232164303e-05,1.498882322781418e-05,1.466165726503965e-05,1.388047645888655e-05,1.477400005428562e-05,1.626987025398872e-05,1.722385586869311e-05,1.743578136260958e-05,1.745580535011492e-05,1.687655412894168e-05,1.585783678051049e-05,1.489238671316378e-05,1.311335619468687e-05,1.328755595891042e-05,1.238221042583224e-05,1.151147740629978e-05,1.355638510870072e-05,1.634970522786961e-05,1.731861795399229e-05,1.63899655224522e-05,1.51041762903846e-05,1.481459330456052e-05,1.555244081202395e-05,1.705784689492454e-05,1.757212511013017e-05,1.711396561177495e-05,1.774846214428687e-05,1.760574880960897e-05,1.830535305842296e-05,2.017320151842639e-05,2.164430110140669e-05,2.17110088547857e-05,2.133537853700036e-05,2.095923511358291e-05,1.975803472278089e-05,1.965181301028419e-05,2.057025600695456e-05,2.212972757993628e-05,2.246854980678456e-05,2.033981327067659e-05,2.068861049620061e-05,2.152707053868239e-05,2.017773261110874e-05,1.924889439994323e-05,1.856467487556427e-05,1.675721846591633e-05,1.673573638983571e-05,1.663371965037588e-05,1.777271643841435e-05,1.967843016388997e-05,2.040558368140005e-05,2.010267040427141e-05,2.15953332916534e-05,2.41226097490521e-05,2.602113878931691e-05,2.539286828697899e-05,2.267430757798521e-05,2.035227739463665e-05,2.141633743740301e-05,2.29739729286322e-05,2.340495391330137e-05,2.112042145737816e-05,1.802705437530141e-05,1.56155133969748e-05,1.401479432382519e-05,1.358587219561089e-05,1.57403693688698e-05,1.897407968797892e-05,2.08553111170595e-05,1.995477172701819e-05,1.927813458492698e-05,2.007087876534113e-05,2.027642984665549e-05,2.000874714212942e-05,1.984047262201968e-05,1.97266886332553e-05,2.144365508474793e-05,2.379773868740806e-05,2.499790321605621e-05,2.524099746440129e-05,2.677233830258657e-05,2.718629552006483e-05,2.506115353822447e-05,2.091498377401698e-05,1.516329683603104e-05,1.207391597349281e-05,1.570633872354483e-05,2.169671387663831e-05,2.565925455533112e-05,2.736672935687043e-05,2.409455581925232e-05,1.754390228976182e-05,1.360754769160455e-05,2.012261758678009e-05,2.728716822698285e-05,3.227013405945135e-05,3.431299014356464e-05,3.540983385629141e-05,3.584018713101407e-05,3.741974019471853e-05,3.89937922513326e-05,3.76387832197388e-05,3.834301667861305e-05,3.749334431298058e-05,3.665859865664603e-05,3.609096549810843e-05,3.778091669679795e-05,4.045565271597162e-05,3.457310574637821e-05,3.879913380744985e-05,4.134550495210639e-05,3.976185026030823e-05,3.94286130837142e-05,4.091229260133016e-05,4.223538131546527e-05,4.129055922046671e-05,3.959105364104125e-05,4.130662795170442e-05,3.793957732235236e-05,4.319333666277171e-05,4.270539572537253e-05,4.144921984602111e-05,4.131873981819292e-05,4.268427636189392e-05,4.157530871906663e-05,4.026148485897851e-05,4.075162137376904e-05,3.782446633626353e-05,3.024641890644205e-05,2.752016643841137e-05,4.588534777438714e-05,4.279127255828361e-05,3.962307850980432e-05,4.356266816659039e-05,4.78951455403059e-05,4.900312396694589e-05,4.310926937166667e-05,4.157301663277897e-05,4.776836502017007e-05,4.721724292531168e-05,5.065510695734049e-05,5.149295698317343e-05,5.029155794489314e-05,5.231952351054463e-05,4.701726844972315e-05,5.357563505063183e-05,5.43368248431525e-05,5.432811491525937e-05,5.643960893067814e-05,5.866150912348996e-05,5.627967760465547e-05,5.208698532485526e-05,5.599196849990166e-05,5.570911700959609e-05,5.766522365952737e-05,5.82694819442194e-05,5.714462250313099e-05,5.68153421912862e-05,5.656917212399126e-05,5.867939543894176e-05,5.935659032202961e-05,5.969359134558022e-05,5.800519233163988e-05,5.740469789390442e-05,5.873867602850793e-05,5.623566150552432e-05,5.878752561486324e-05,5.915076901580557e-05,5.69900313360382e-05,5.8073432163748e-05,6.121456350921684e-05,5.895911039011684e-05,5.973944111374148e-05,6.1829027609695e-05,5.983837881728823e-05,6.032085895963717e-05,6.239251892809876e-05,6.131342078868333e-05,6.246441805585911e-05,6.257907866709841e-05,6.293789070121794e-05,6.229933958869925e-05,6.124499598119056e-05,6.117260626654057e-05,4.970188858836186e-05,5.577705123019919e-05,6.049132584017504e-05,5.709941612761187e-05,6.393521363581599e-05,6.158188441102881e-05,5.883462195626867e-05,6.305391852182183e-05,6.168004200099694e-05,6.562665267999051e-05,6.253210296181338e-05,6.372939232959192e-05,6.211539363230832e-05,6.223209701518648e-05,6.213162321170657e-05,6.035005290077478e-05,6.042206462224751e-05,6.332156986095657e-05,5.912656136764465e-05,6.350023999768188e-05,6.61856724195313e-05,6.344591353146026e-05,6.195726380568368e-05,6.505935730259001e-05,6.349730451875206e-05,6.480539414191701e-05,6.664930115746522e-05,6.27362353623518e-05,6.153157914882063e-05,6.342813980972085e-05,6.413643468464868e-05,5.236490681904036e-05,6.000242785622065e-05,5.825665430341651e-05,6.371774692276901e-05,6.430119145548746e-05,6.586876937363988e-05,6.220518711792851e-05,6.702719782583253e-05,6.663155156294987e-05,6.489713389027971e-05,5.68659289377753e-05,6.521183331637175e-05,6.837300634264358e-05,6.583820822313771e-05,6.957529004580681e-05,6.844842000271169e-05,6.123841729142459e-05,6.571667135303543e-05,6.684226265325428e-05,6.982952664835273e-05,6.473409015235065e-05,6.809542262959562e-05,6.654873888749705e-05,6.438349745923461e-05,6.200528502401223e-05,6.761221867052425e-05,6.662337243398654e-05,6.909110491295619e-05,6.765333950276573e-05,6.714514778195485e-05,6.814356448404454e-05,6.632454872133955e-05,6.852517674492029e-05,6.811477266330831e-05,6.816328446852648e-05,6.968540669651094e-05,6.782363749273502e-05,6.92784769351666e-05,6.978292893624495e-05,6.87102808080671e-05,6.714056360937949e-05,6.870613092552521e-05,6.51113112584437e-05,6.638525281712651e-05,7.036137913357872e-05,6.710596517004784e-05,6.976550908045872e-05,6.851957922893356e-05,6.907274409543081e-05,6.543049030580671e-05,6.985989478106227e-05,6.93435721857362e-05,6.775875938718214e-05,6.791910087601416e-05,6.581103292641489e-05,6.962029536112529e-05,7.003694035136613e-05,6.979447783417155e-05,6.833453146264296e-05,6.788358560216744e-05,6.971377226962177e-05,6.768233238370265e-05,6.877730623656318e-05,7.006224176701871e-05,7.050545083097236e-05,7.170804014564064e-05,7.257675693348077e-05,7.255564561241017e-05,7.209648845333921e-05,7.047126255445006e-05,7.213997375354058e-05,7.062192902642576e-05,6.107859855911432e-05,6.504948926794104e-05,6.968941181570833e-05,6.834090909220828e-05,6.944356344473447e-05,6.922626562225603e-05,6.846711055896618e-05,7.067684258843332e-05,7.100188455124796e-05,7.025032152113545e-05,7.036297957277609e-05,7.11897873723881e-05,7.046741024100519e-05,6.952436551818058e-05,7.111412439767118e-05,7.248046518217485e-05,7.24739588740811e-05,7.223797049534819e-05,7.279165007595914e-05,7.267197100211107e-05,7.223804287702042e-05,7.204759061253575e-05,7.179715806898657e-05,7.299749550940729e-05,7.208147327755303e-05,7.000163418012809e-05,7.269255152425185e-05,7.089350506067762e-05,7.010547775257125e-05,7.288313246726497e-05,7.334456562780755e-05,7.349297218312767e-05,7.39261523642718e-05,7.13789287243644e-05,7.097260214362206e-05,7.085065511071038e-05,7.050175936568803e-05,7.05440785167255e-05,7.269901762030547e-05,6.884516807549402e-05,7.13981339947326e-05,7.054896830080586e-05,7.186366878336889e-05,6.931925194386287e-05,7.385796882901987e-05,7.28324974663277e-05,7.383598088547435e-05,7.226431742404427e-05,7.484723327077498e-05,7.546244531519964e-05,7.526723998757106e-05,7.38100039075475e-05,7.396657350701493e-05,7.422653630407598e-05,7.511267294770235e-05,7.490319234582606e-05,7.556417373433171e-05,7.351484753296082e-05,7.329562757496394e-05,7.27105745606401e-05,7.056272886093983e-05,7.106352156636599e-05,7.563882336563728e-05,7.273466961508865e-05,7.515697053111446e-05,7.444102732615302e-05,7.110972520048046e-05,6.252373885746541e-05,6.548290267891794e-05,7.33193365938272e-05,7.369576150152559e-05,7.426938625404323e-05,7.406826975651488e-05,7.357338017858047e-05,7.381782112814963e-05,7.458599977324567e-05,7.601933381661333e-05,7.60747299231025e-05,7.564716334276115e-05,7.601844915173038e-05,7.744505974198754e-05,7.649391631427985e-05,7.646238203240646e-05,7.551164876750812e-05,7.628434724591527e-05,7.628928528444376e-05,7.577275358650898e-05,7.676574970558859e-05,7.617694088671619e-05,7.669841866558751e-05,7.616170856591329e-05,7.639419045474648e-05,7.621078333969333e-05,7.668469831749365e-05,7.596770155708071e-05,7.557833641486706e-05,7.573841250423422e-05,7.413868103879028e-05,5.349656048642988e-05,6.200477835230651e-05,6.249386935405356e-05,6.559782064721411e-05,6.853822957314794e-05,7.061867989358287e-05,7.02748589080255e-05,6.956695811109097e-05,7.106456707940951e-05,7.099889277546194e-05,7.513129916469262e-05,7.405462179009324e-05,7.262038699702661e-05,7.218945869013001e-05,7.136799909185587e-05,7.155449449159135e-05,7.206915230845584e-05,7.404574297163161e-05,7.492202766542503e-05,7.463084424040359e-05,7.442951059785852e-05,7.429563667384299e-05,7.46685711764577e-05,7.523069528549691e-05,7.52222909691088e-05,7.484708850743049e-05,7.407487257350497e-05,7.481615740615909e-05,7.237929973160465e-05,7.322335849643435e-05,6.383988697347333e-05,5.945372652617835e-05,5.33828038418528e-05,5.706571039557119e-05,6.297833597118515e-05,7.204271691327145e-05,6.654298052334978e-05,6.145863450801679e-05,6.052314160632941e-05,6.313481710416425e-05,6.343811239567417e-05,6.08906796531581e-05,6.136127311644329e-05,6.625375944588692e-05,6.292293986469596e-05,6.790115022129816e-05,7.051700777130698e-05,7.294494641535963e-05,7.198622703929062e-05,7.137978121961524e-05,7.135821952369518e-05,7.282016041241447e-05,7.075545712689611e-05,7.257710275702592e-05,7.239508697856144e-05,7.252262348505178e-05,7.412619117912452e-05,7.481234530475434e-05,7.487694996843434e-05,7.481546575906879e-05,7.495780833873663e-05,7.460095865217568e-05,7.443564695518306e-05,7.443851809484862e-05,7.42055777887579e-05,7.457049401056985e-05,7.428207717390964e-05,7.531457760121731e-05,7.518979964068017e-05,7.437129964855995e-05,7.440270525190491e-05,7.495210627144557e-05,7.29145219857939e-05,1.626097695919259e-05,9.422771554025209e-06,4.214197035471458e-05,2.328870331799514e-05,3.310479687898324e-05,4.220636832850827e-05,5.01839231813061e-05,6.009193905331909e-05,6.879462958345309e-05,6.975005157223107e-05,7.188432972958995e-05,7.246134033588694e-05,7.312652790379065e-05,7.317773391569784e-05,7.32724011005823e-05,7.336706828546679e-05,7.363024000333055e-05,7.328144880961255e-05,7.328816422031499e-05,7.370814680988701e-05,7.299353864465806e-05,7.290496760505797e-05,7.334421980426239e-05,7.313574450338945e-05,7.273733969455359e-05,7.314578142860703e-05,7.32768887642613e-05,7.247134509147236e-05,7.164450512222823e-05,7.143084246817793e-05,6.931671054292637e-05,7.034596183739118e-05,6.976608813383665e-05,6.935672152286014e-05,7.006359289156722e-05,6.989608561718325e-05,6.876767143174695e-05,6.995013864153194e-05,7.137281649426398e-05,7.007426516701891e-05,6.900386087068056e-05,6.985026801865408e-05,7.002132199497791e-05,6.882347770104551e-05,6.971744765009005e-05,6.826979007802653e-05,7.113545286375845e-05,7.047733457251037e-05,7.03177329852168e-05,6.862853777288184e-05,6.878502694826896e-05,6.870036451896994e-05,6.705450984349182e-05,6.59470863430057e-05,5.9151737321732e-05,5.867841024395844e-05,5.461137335141112e-05,5.59707453893595e-05,5.411564414607869e-05,5.962244096600717e-05,5.683904316774142e-05,6.587234341976703e-05,6.290695477450173e-05,4.452601433999728e-05,6.196590456886779e-05,6.431624282210978e-05,6.203326938698258e-05,6.548977491657691e-05,5.65884835541454e-05,6.195788307110176e-05,6.114548726667391e-05,6.174780089710505e-05,5.98374716336628e-05,6.407905210337686e-05,6.265486871186218e-05,6.736900016697517e-05,6.537482397440782e-05,6.793425277273683e-05,6.732865783983071e-05,6.756352188992147e-05,6.861686019642678e-05,6.831978168632166e-05,6.751595587188726e-05,6.815682641488089e-05,6.694867497082123e-05,6.907966056633393e-05,6.931109694212361e-05,6.7553806661025e-05,6.766561704285957e-05,6.732139232841922e-05,6.109511766520153e-05,6.672507913861695e-05,6.641565633643135e-05,6.619107530924376e-05,5.84567638914599e-05,6.278024341907491e-05,6.699595467912967e-05,6.834861532757965e-05,6.844906982928027e-05,6.851157622870601e-05,6.834579887628863e-05,6.833040490308436e-05,6.89435733716294e-05,6.944068426266084e-05,6.803830866475187e-05,6.700955278262154e-05,5.913051823239384e-05,6.383289972937956e-05,6.695993112509565e-05,6.636334851462448e-05,6.769845741179656e-05,6.681799629551478e-05,6.780569648890867e-05,6.720592667213642e-05,6.610272945706844e-05,6.522483386894721e-05,6.712407023899798e-05,6.743909377413351e-05,6.724907660392307e-05,6.620801744599319e-05,6.649636672642595e-05,6.437830286789004e-05,6.61424444763868e-05,6.599160991808336e-05,6.633508427585478e-05,6.720586394135382e-05,6.466600473447664e-05,6.496013328931752e-05,6.586608642632212e-05,6.68175282273676e-05,6.613253622969769e-05,6.634370895422281e-05,6.519646588311398e-05,6.27171193627127e-05,6.120772746239398e-05,5.856040399097995e-05,5.494789343896171e-05,4.802097866477617e-05,5.184010752565395e-05,3.967241787880846e-05,5.375062980688884e-05,4.342870818880896e-05,4.845187480204066e-05,5.002922022474175e-05,6.140308398729346e-05,5.947090913092778e-05,5.651202920647864e-05,4.657807093889332e-05,4.762475656547879e-05,5.148892693251116e-05,4.571704430160849e-05,4.894777450642326e-05,5.053078419709767e-05,4.61372376022708e-05,4.605178219154033e-05,4.991917836843226e-05,4.246691902559609e-05,5.384922088264963e-05,4.375936777363036e-05,5.460229106002635e-05,5.505903308396684e-05,5.781134536672704e-05,5.192498066604328e-05,5.530538169271999e-05,5.361599989651878e-05,5.290034621824632e-05,5.237739346174289e-05,5.870461964747728e-05,4.400990969392872e-05,4.118757055599682e-05,3.231865792828157e-05,3.063952457262901e-05,2.255103435198991e-05,1.863961001235478e-05,1.080169388164616e-05,1.886229383548882e-05,1.215120351463118e-05,1.231188600156355e-05,1.513131137506731e-05,3.012194897013235e-05,3.566819219295109e-05,2.814882619329778e-05,3.070683389812842e-05,2.110927990741811e-05,2.169727161763498e-05,2.798423831302756e-05,1.480615842702192e-05,2.826509448190166e-05,2.090785136445833e-05,3.770023847643545e-05,1.125108755737249e-05,3.700109103639738e-05,2.058875113269398e-05,2.633646230627183e-05,3.253965847541557e-05,2.620356070938674e-05,2.523456394010017e-05,2.083234521669792e-05,3.551910042446706e-05,2.88338141697637e-05,3.247794586166207e-05,3.564501397301761e-05,3.417652495568283e-05,3.911376004762884e-05,3.555471381569172e-05,3.909487727782253e-05,3.905847733909284e-05,3.907169101548101e-05,5.076631737553627e-05,5.347776537887106e-05,4.950678781203764e-05,5.575518955245971e-05,5.375511747056785e-05,4.745865510401791e-05,4.50642227402869e-05,4.625375842248673e-05,4.489144768864532e-05,5.018070782657696e-05,4.837975048685555e-05,5.024485166027699e-05,4.765821619983384e-05,5.628284470493646e-05,5.466591696264946e-05,5.286137673015205e-05,5.834951033801334e-05,5.4515257728841e-05,5.953942481763125e-05,5.868298717836657e-05,5.837216419294349e-05,5.957979448896299e-05,5.830321984589218e-05,6.006052460332526e-05,5.991689202140992e-05,5.888000043931957e-05,6.028391213716166e-05,6.015730855000244e-05,5.998386919545781e-05,5.931202492643023e-05,5.930409430787493e-05,5.93394141512066e-05,5.913743470329698e-05,5.992916312757733e-05,5.866985714302187e-05,5.924224819014816e-05,5.840826495409455e-05,5.5102454044904e-05,5.764758826720601e-05,5.892050763582859e-05,5.892389268536711e-05,5.840376442256272e-05,5.841453481539232e-05,5.876833482082949e-05,5.850009316894555e-05,5.846339485687806e-05,5.877146653451514e-05,5.780822973785745e-05,5.81201215593073e-05,5.752953938946497e-05,5.84744153685973e-05,5.64469934697284e-05,5.733747944761572e-05,5.76227878935735e-05,5.668879490098315e-05,5.718689661668353e-05,5.687220362451789e-05,5.750066392768524e-05,5.746021946195883e-05,5.72428323687513e-05,5.736471104119475e-05,5.679404750331262e-05,5.720295408854998e-05,5.699398498382421e-05,5.709159408156493e-05,5.617157879412531e-05,5.656025309348942e-05,5.67972467732257e-05,5.682546114906564e-05,5.629234359305702e-05,5.607531679972909e-05,5.651706053694024e-05,5.618168890525589e-05,5.624073304802609e-05,5.631487118218113e-05,5.580271053300897e-05,5.611481789099393e-05,5.584836326217358e-05,5.443973871322774e-05,5.531698367053956e-05,5.585866719533763e-05,5.559306827873133e-05,5.528041644972295e-05,5.538208937623961e-05,5.509382132412795e-05,5.497766562923645e-05,5.479846228085896e-05,5.502099651520369e-05,5.489819779128197e-05,5.481502159898629e-05,5.430189183964693e-05,5.269838124667118e-05,5.420591052529085e-05,5.300781772095042e-05,5.403572673751552e-05,5.320861734760248e-05,5.407758907977707e-05,5.388601972481745e-05,5.290783209163775e-05,5.323120605902761e-05,5.320550895690009e-05,5.040273136801199e-05,5.203585169462033e-05,5.311120287613602e-05,5.305302490071035e-05,5.209027386549746e-05,5.368925979971728e-05,5.122684174397179e-05,5.319473534710728e-05,5.234595729724741e-05,5.229659299677839e-05,5.247787530763083e-05,5.187333875562102e-05,5.049644874450848e-05,5.12889130491233e-05,5.209756269989221e-05,5.043520178617973e-05,5.177143340351237e-05,4.839539940439427e-05,4.956507033876767e-05,5.190320504206968e-05,5.072651630245199e-05,4.871654079931582e-05,5.162340082016549e-05,5.104629611769463e-05,4.488177910571541e-05,4.748053527929585e-05,4.585247443157723e-05,4.435710366541261e-05,5.104005199210256e-05,4.440978948039673e-05,4.487537252348117e-05,4.297436601942369e-05,4.400427357438348e-05,4.155115415079868e-05,4.137063828143123e-05,4.152179453605573e-05,4.500661818855354e-05,3.539459912276607e-05,4.30047888405078e-05,3.703852201183611e-05,3.681597410539774e-05,4.275978653085835e-05,2.962348132486677e-05,3.698621740699246e-05,2.40339723595858e-05,2.686428876203956e-05,2.240655490450932e-05,1.807271916807806e-05,7.152379340318946e-06,1.955901890222918e-05,1.018468275054589e-05,1.278073747927012e-05,1.67562815253812e-05,7.371003034184689e-06,1.157583275533091e-05,9.8261176183528e-06,1.305403458883976e-05,4.671771609490895e-06,1.425281582330729e-05,9.001438804993652e-06,9.616499491299246e-06,6.413709416210689e-06,2.688766804217371e-05,2.131338818073245e-05,1.396968124023917e-05,3.806725859218719e-06,1.411391941547896e-06,1.176373959767509e-05,2.632163130162945e-05,1.860563003420039e-05,2.734350368672958e-05,2.347004675114858e-05,1.774438062221323e-05,2.064568012215309e-05,2.866488660612218e-05,1.042050304295104e-05,1.344817692142138e-05,1.452904760756594e-05,5.458774153966491e-06,2.503257725402333e-05,2.019468439874782e-05,1.125020289248953e-05,1.882835487361536e-05,2.294163159111328e-05,2.208062103864452e-05,1.322348169203982e-05,2.908937374843004e-05,2.611533951453581e-05,2.927187689682095e-05,2.902989049018159e-05,3.140575373801931e-05,2.672627299789017e-05,3.244969529498602e-05,3.271034250097017e-05,4.382685403210637e-05,3.762144539651443e-05,3.640950919523732e-05,3.515980262890274e-05,3.847675549017374e-05,3.940962656684434e-05,3.977806375489042e-05,4.316473785982811e-05,4.222031064706368e-05,4.287092135041868e-05,4.30574971742344e-05,3.181126883979175e-05,4.275102834851708e-05,4.509418714411347e-05,4.471224594874945e-05,3.410624396041748e-05,4.586537767101558e-05,4.182166376174621e-05,4.322957897030407e-05,3.072189893684439e-05,4.173865806850071e-05,3.997900331944217e-05,3.88272058326677e-05,4.551197898173895e-05,4.350743692946575e-05,3.201099721769466e-05,3.975003676715753e-05,4.425287566586576e-05,4.277761654945395e-05,4.537889482219166e-05,4.35920728188183e-05,4.502675637825286e-05,4.295588456577791e-05,4.148650123267054e-05,4.59340968306421e-05,4.180734505849513e-05,3.51857852365152e-05,4.326011277661894e-05,4.221726016169908e-05,4.226111219570649e-05,4.199828067170222e-05,3.509818491556394e-05,4.23423614270389e-05,4.663930422512842e-05,4.172731183925638e-05,4.211163117467397e-05,4.028156836030324e-05,4.411788384713448e-05,4.113124876834374e-05,4.141572160810753e-05,4.580764846195778e-05,4.238035215407631e-05,4.180258716990643e-05,4.5611905901473e-05,4.456103339726874e-05,4.499535238338948e-05,4.378624469701543e-05,4.494266495992375e-05,4.569241925247096e-05,4.436180847410833e-05,4.367714219396349e-05,4.410858038952898e-05,4.555147524755898e-05,4.616349767296019e-05,4.273253724398166e-05,4.607980033262439e-05,4.6179594552626e-05,4.550691226468202e-05,4.673193426805969e-05,4.620512678538896e-05,4.501697761433296e-05,4.66602370047408e-05,4.618951164596395e-05,4.66285048796299e-05,4.610016290550767e-05,4.659343837215109e-05,4.610793589286564e-05,4.595068429719757e-05,4.610750884099941e-05,4.619460570720818e-05,4.573896147196335e-05,4.55496512294185e-05,4.571342923920041e-05,4.604075122469064e-05,4.58781273004606e-05,4.60293390477005e-05,4.617269818774296e-05,4.594728235860218e-05,4.553431114034802e-05,4.540859704351655e-05,4.511836664384631e-05,4.474088255101077e-05,4.549015188635399e-05,4.446879662808999e-05,4.400783475265779e-05,4.501815743559051e-05,4.326073606324103e-05,4.368523446492014e-05,4.172811929702227e-05,4.015860155005377e-05,4.064954471836939e-05,3.776318479558026e-05,4.025711783141991e-05,3.922699152296178e-05,3.955857357198388e-05,3.778377014316589e-05,2.515937707593843e-05,3.957257218739549e-05,4.173090920836681e-05,4.181898403139163e-05,4.159181576154182e-05,4.161321741354216e-05,4.228060779700445e-05,4.278582623956782e-05,4.313567822690456e-05,4.395265579118534e-05,4.367125997673262e-05,4.344598891093634e-05,4.25846590748689e-05,3.846282443098957e-05,4.20299774102178e-05,4.345164433226084e-05,4.381722244425337e-05,4.417711135680769e-05,4.369289968401055e-05,4.349481597854916e-05,4.243697553203038e-05,4.283197518530769e-05,4.338535397985842e-05,4.116623646022389e-05,4.290246769590412e-05,4.206563342620499e-05,4.219500038476226e-05,4.060472839963959e-05,3.873031492196379e-05,4.090331244852734e-05,4.267844400759281e-05,3.691915659190106e-05,3.790598257554243e-05,4.102726847496413e-05,3.628023794133556e-05,3.152692146159318e-05,4.028322348787518e-05,4.038866589103407e-05,3.21586606545131e-05,3.649835206822872e-05,4.043933225736265e-05,3.172676886713488e-05,3.517976549410708e-05,3.517600003866889e-05,3.310671418905685e-05,3.046991903399081e-05,3.022659839185979e-05,3.431165027838735e-05,3.30645824261264e-05,3.532732598810277e-05,2.848761263143035e-05,2.746565982224995e-05,3.172970112910147e-05,3.212690601065974e-05,2.476910233737693e-05,2.795032428261899e-05,3.433850870423395e-05,2.991424011074437e-05,2.841493339009138e-05,2.504534538100682e-05,1.898145899946399e-05,2.451936385364045e-05,1.550003648132077e-05,1.561773551431263e-05,2.176696390863276e-05,1.815810863106272e-05,2.481983223872892e-05,1.971429689096747e-05,1.769249180986456e-05,1.915842494992839e-05,1.904028760569905e-05,1.813847711306909e-05,1.837633856863147e-05,1.920922401598941e-05,1.372909260411488e-05,8.176465317804397e-06,1.179489910333446e-05,6.298681749469031e-06,6.512765584427675e-06,5.144241688265086e-07,1.753123589923988e-06,1.739874446516416e-06,5.030413466256556e-07,1.648832618322302e-07,1.045656906089945e-08,3.158911983679152e-08,3.9267917728929e-10,5.242276390238578e-09,7.834399346526627e-09,4.581388615362344e-10,8.026612817945118e-11,2.341099939141518e-10,5.268502119845691e-13,1.980001609268123e-15,3.459873609651909e-10,1.490692175719077e-10,9.963969317378439e-16,1.405210225042111e-09,5.471040112992777e-10,1.629398300173493e-17,5.688565937738767e-11,3.217284907075413e-11,2.175567960593023e-12,3.034179864867771e-10,4.902858864348141e-09,1.979876630247386e-08,3.575373124472504e-08,2.849364685017292e-08,1.358828371165775e-08,1.228931578767689e-07,5.785238336216584e-09,9.054952022915587e-09,2.634033070453276e-10,2.853342138331069e-10,4.895856983071775e-12,6.86641302538456e-11,2.327884252151338e-10,2.810659952995262e-10,2.219362973927511e-08,4.494391635861272e-10,6.490072241274131e-08,5.514351053788125e-08,3.84653449216652e-08,2.662402503919956e-09,1.297988197835027e-08,8.46730806642181e-09,7.532094718837461e-11,7.097275494937455e-13,5.511673655731896e-09,1.428347106998337e-07,9.139004355141695e-08,3.65546746601226e-13,1.186233308615829e-12,2.069384449534451e-07,2.68547263388956e-07,8.343545379473988e-08,4.118020129752178e-11,2.31218330023269e-07,1.975376179139621e-08,1.867619573070989e-07,7.016508084269929e-08,5.290354709664103e-08,2.399159852017373e-07,2.997498120160823e-07,2.653816831230853e-06,4.136893409517032e-08,2.090052151378263e-08,4.050159899302921e-06,1.340066478752094e-06,1.54628660799021e-06,2.44699899022818e-07,9.446577081784792e-07,1.047251627135188e-06,5.296609933779255e-06,1.055145869878994e-06,1.944043037890954e-06,2.962521526803736e-06,3.187318251374593e-06,5.686154743388227e-06,5.235580603011712e-07,4.369486926973634e-06,7.084511389157986e-06,5.772296493219719e-06,2.901524526516464e-07,4.129786333543673e-06,2.417508284234392e-06,2.471589617859346e-06,4.42911784383346e-06,3.453213771988926e-06,1.53386366115924e-06,5.90675630666002e-06,4.58621856392697e-06,3.685336969424115e-06,4.211737827944999e-06,5.229648924971483e-06,7.175935392581536e-06,5.781702813223885e-06,2.685791917488226e-06,4.214471522857416e-06,1.347257115344853e-05,1.190166769957698e-05,3.196648088078423e-06,1.31527318243865e-06,7.2822534531264e-06,9.579636631563531e-06,1.60893085428955e-05,7.740676983737154e-06,1.036417916427186e-05,1.370981253935203e-05,1.599755110123516e-05,1.913442720861697e-05,1.003006182654339e-05,1.060739219898349e-05,1.535594869911107e-05,5.085872062256116e-06,1.787777119750635e-05,1.100250436554907e-05,7.686837244049327e-06,4.25372756194969e-06,9.08396870938027e-06,1.120527036096372e-05,5.873101965606633e-06,2.111486616403359e-06,5.536949576951032e-06,8.315982921228726e-06,1.153906093565407e-05,2.190182946155801e-05,8.164357311671763e-06,8.283686058226197e-06,7.545663869660422e-06,1.427485523826417e-05,7.217478933788898e-06,1.373196856922529e-05,6.971334602199634e-06,1.772216749124297e-05,1.640695309880699e-05,1.493230279268282e-05,1.474755661669321e-05,7.250658933616858e-06,1.127061774102498e-05,2.272044365587225e-05,2.09442159165927e-05,2.371625542200206e-05,1.97280043712085e-05,2.180168217984403e-05,2.447167880796745e-05,2.194631202035472e-05,2.027538674633441e-05,2.751022280512692e-05,2.285174963900481e-05,2.623171396292566e-05,3.023261813426792e-05,3.205265689127392e-05,2.821333997776705e-05,2.235385622167234e-05,1.938832844274816e-05,2.227345707286837e-05,3.121591350078548e-05,3.092273555857338e-05,2.947334726030247e-05,2.268217224879471e-05,3.285204651344069e-05,3.217141269668052e-05,3.169900325766285e-05,2.949441113116568e-05,2.748291400443084e-05,3.237720263751328e-05,3.131345986774358e-05,3.041421007782938e-05,3.077853518265132e-05,2.985326016036212e-05,3.233369723129185e-05,3.364549842576122e-05,3.228810964563224e-05,3.430094422482196e-05,3.375353289702717e-05,3.174587762860675e-05,3.282337532882484e-05,3.220014500359738e-05,3.43201591460798e-05,3.350151599909666e-05,3.140452566231361e-05,3.321165715867727e-05,3.430034586966478e-05,3.416862248555561e-05,3.317680538349276e-05,3.294412404294051e-05,3.392666020614033e-05,3.379052475698763e-05,3.364676188806223e-05,3.378374741974338e-05,3.280992038019585e-05,3.33430709100774e-05,3.339323140894108e-05,3.376359234098718e-05,3.378795762034545e-05,3.442490427246277e-05,3.416867395696699e-05,3.397677968872308e-05,3.320943504133944e-05,3.406181608999536e-05,3.364501186007558e-05,3.37515399883181e-05,3.392807566995306e-05,3.388748724512298e-05,3.308694595012675e-05,3.346465683886865e-05,3.292429950715422e-05,3.388711568587213e-05,3.364073651596849e-05,3.36121763165834e-05,3.333262864749528e-05,3.389884795070175e-05,3.361153292394126e-05,3.35211756655184e-05,3.303571581099549e-05,3.364084589271764e-05,3.305403159103592e-05,3.315453434718471e-05,3.243671726115304e-05,3.211670341183684e-05,3.052475860584454e-05,2.970020831016566e-05,3.005793703192396e-05,2.961151180900035e-05,3.056455244076158e-05,3.036736868075839e-05,3.127895793730825e-05,2.739755188563346e-05,2.984396715788706e-05,3.006098349608455e-05,3.108641625521817e-05,3.162232211408971e-05,3.078351504170158e-05,3.151591703469e-05,3.172563971304791e-05,3.298214854809162e-05,3.261392207113584e-05,3.229498188329121e-05,3.206501324696642e-05,2.96903483179247e-05,3.091872400544957e-05,3.096120159192518e-05,3.22968630025287e-05,3.309609258077574e-05,3.28489389269791e-05,3.312481684528456e-05,3.138581258731665e-05,3.171372729827847e-05,3.267047950134411e-05,3.112331321476392e-05,3.063835761922431e-05,2.874286096890604e-05,2.88767694752761e-05,2.887416775627941e-05,2.946623133768028e-05,3.057017006276835e-05,3.117948300090529e-05,3.010809913926924e-05,2.973110965452737e-05,2.940927098282986e-05,2.817545058507078e-05,2.938493224341809e-05,2.991656114970093e-05,3.076924539713947e-05,3.094278849874762e-05,3.130745379742911e-05,2.995700481118654e-05,3.051523237353669e-05,3.168832293980315e-05,3.137978721522291e-05,3.055100098323628e-05,3.054508981333651e-05,3.098658423589883e-05,3.164788732072557e-05,3.169742694568958e-05,3.108048900050235e-05,3.134676991330934e-05,3.150605784668983e-05,3.158826895002227e-05,3.162208325457131e-05,3.100439173575195e-05,3.122672893110004e-05,3.126556250249866e-05,3.055713814480159e-05,3.059556235763165e-05,3.072605605755348e-05,3.097115568034005e-05,2.988550780382752e-05,2.899084299072945e-05,2.903358678091075e-05,2.837203920687998e-05,2.898191109237478e-05,2.916068095495962e-05,2.845565210193151e-05,2.955715236890583e-05,2.886998489986462e-05,2.879089907629143e-05,3.015814221897574e-05,2.870129539150069e-05,2.899986415981321e-05,2.989194173024902e-05,2.769130164305627e-05,2.972489769856741e-05,2.961526761354891e-05,2.871001497028344e-05,2.958987290596322e-05,2.943461502324498e-05,2.961497004445191e-05,2.998486853803648e-05,2.951328907552719e-05,2.981410730536483e-05,2.990153149758029e-05,2.92832890738111e-05,2.973825533405925e-05,2.957279646099973e-05,2.835863251269916e-05,2.396214883046087e-05,2.824522330014884e-05,2.878668324600375e-05,2.888045128967081e-05,2.977344489038089e-05,2.940289013630133e-05,2.843617258544958e-05,2.910170838962088e-05,2.904640316234239e-05,2.877412743859218e-05,2.850150589129679e-05,2.863180335646278e-05,2.822512853945286e-05,2.876587351523417e-05,2.777641846840882e-05,2.629095916589651e-05,2.75497608914687e-05,2.82970501859557e-05,2.681189890767082e-05,2.889306258969776e-05,2.851020455981867e-05,2.779175373203448e-05,2.852637623387913e-05,2.814255874472243e-05,2.789418344914651e-05,2.625152402237748e-05,2.817893777319124e-05,2.877562493496678e-05,2.789753552481212e-05,2.858332935056233e-05,2.853744902125055e-05,2.471237279963689e-05,2.832119671181562e-05,2.808099169855421e-05,2.73100070572976e-05,2.79184087906051e-05,2.712019818545506e-05,2.584098080710663e-05,2.615791200142613e-05,2.586483458931438e-05,2.470531236963008e-05,2.421899599865232e-05,2.254060978270546e-05,2.35347559661329e-05,2.172603850690634e-05,2.33153429903434e-05,2.159648335600124e-05,2.264459007608507e-05,1.885643896244525e-05,2.017393016059364e-05,1.639372494608437e-05,1.438706371929609e-05,1.105116012987093e-05,1.279854015367844e-05,6.775016607420541e-06,4.607527728235007e-06,2.150626362275563e-06,1.410710025771296e-06,4.790141861856688e-07,1.445494968545102e-07,1.870487174077055e-07,7.65918969712714e-10,9.47304384236047e-10,9.278809233380743e-12,9.297346179641911e-10,4.462494963082159e-10,4.236304650048405e-11,1.668064589485155e-09,2.547145628549531e-09,4.009778968599927e-14,6.805385142250464e-14,1.17185444815272e-08,6.653697284455371e-09,3.394649760977944e-08,1.973169824921524e-08,1.317506478723636e-10,8.681830534314238e-11,3.53994229591006e-09,3.07207963227039e-09,6.959295117383387e-08,1.449313302816067e-07,8.574578991469695e-08,5.592226092832863e-07,5.120821552698153e-07,1.699242994803385e-06,2.62324450178153e-06,1.577951016025504e-06,3.45306900864444e-06,4.513905654273629e-06,7.739095846319068e-06,1.077824020923775e-05,1.202450663553883e-05,1.326032677805379e-05,1.370184010027498e-05,1.302661399867209e-05,6.137322413477125e-06,2.418915464366857e-06,6.425359648478434e-06,4.318428895374147e-06,7.307462220238512e-06,1.205317701591388e-05,1.385366548324733e-05,1.577482224061617e-05,1.472993087526149e-05,1.497868979370029e-05,1.119908132586663e-05,9.074396152802191e-06,1.146345377524883e-05,1.027593553110255e-05,1.093359902417672e-05,1.292368525014199e-05,1.452209253310429e-05,1.427026141479921e-05,1.497649180358655e-05,1.512133275730795e-05,1.454705134217493e-05,1.577012185524486e-05,1.521381843901513e-05,1.559329584268013e-05,1.493367080628819e-05,1.51473125500776e-05,1.537858164378034e-05,1.546104206176161e-05,1.562168433665383e-05,1.54371987346843e-05,1.46350795192332e-05,1.470395068037144e-05,1.46216768462564e-05,1.328695478891041e-05,1.430996276202393e-05,1.407215519059534e-05,1.43429462858238e-05,1.310041917713482e-05,1.392614688134883e-05,1.394452539217188e-05,1.259798179926717e-05,1.312457052843956e-05,1.409722739761916e-05,1.358722171167781e-05,1.387802754564237e-05,1.350182983597074e-05,1.358956165029323e-05,1.335508323366736e-05,1.31722032984604e-05,1.278994684070171e-05,1.301730089017695e-05,1.227600801511481e-05,1.21649093863906e-05,1.24118728372374e-05,1.184229220959609e-05,1.171358834758063e-05,1.215502526692556e-05,1.159214999697666e-05,1.164329971202766e-05,1.130788103225635e-05,1.088099202479125e-05,1.096897234952177e-05,1.186574467564329e-05,1.082479288386058e-05,9.708145143488016e-06,1.051141723812976e-05,1.064814179367044e-05,1.088563611330638e-05,8.625984455095944e-06,9.693755667046314e-06,7.850162305411162e-06,8.991324913931281e-06,9.535024268301272e-06,9.397737548439523e-06,5.873876449499623e-06,8.432394445119571e-06,8.144849003369105e-06,5.912779185607275e-06,7.132852695325991e-06,7.819040599069522e-06,8.52173554528824e-06,6.498715658452865e-06,6.553704416975493e-06,5.302319400085701e-06,5.175112632324447e-06,6.451149238298251e-06,8.813720798389949e-06,2.913597950294584e-06,8.486956956016777e-06,4.089653752400548e-06,2.681897783521609e-06,4.907004082293359e-06,6.60064393142441e-06,4.787228901669349e-06,3.322776368923271e-06,3.275361146039563e-06,1.603492095437288e-06,1.121220010184009e-06,7.03158751889626e-07,5.773334285551509e-07,1.420329469588174e-06,3.060414119427392e-07,4.473921616406761e-07,1.049358923013616e-07,7.509685353111345e-08,8.405709735286363e-09,1.293945359743991e-10,3.568221011014194e-11,7.704517513007473e-11,1.100314896455243e-14,5.787807403036691e-17,2.144220584282149e-13,6.386572723046371e-15,3.291321304768917e-18,3.153674285027561e-22,2.233694384183261e-31,7.92918057275692e-26,3.574568079429013e-38,1.141329247214434e-34,4.76630175174259e-37,9.391216361890923e-32,1.216237803846414e-38,1.247833248232878e-37,2.354619227034713e-41,1.190623015765063e-32,8.167336782573479e-32,5.927928669607519e-49,8.270502380019963e-20,2.494754969939989e-20,1.914239964769401e-22,3.046604902724827e-23,2.804236079583786e-31,5.57667649903328e-29,2.383994524473315e-41,0,0,0,0,2.212300774590942e-33,1.545030062160089e-36,0,6.377394324885687e-46,2.451929147196821e-39,8.418974078845108e-30,1.226157108846574e-48,1.598411505226504e-25,1.333461972856335e-22,1.207315677017507e-24,5.137519200243572e-31,2.902164863043563e-27,3.681975242868877e-32,1.49031297618061e-47,0,5.954470626698249e-31,1.866651508416793e-27,8.924841141615824e-42,1.074676906026735e-37,8.705248015886521e-31,2.7307433486729e-20,8.138351944044585e-20,3.711989509625214e-16,1.522233132791159e-17,9.092322680294117e-14,6.494105750171854e-14,4.660202283847899e-15,3.999821261101438e-11,8.878226540451192e-10,4.850976244653658e-14,4.478781643577408e-11,9.283824076905906e-09,2.651027000310408e-10,1.03019454829023e-10,5.832206320789918e-09,3.862446476871794e-08,1.457125336065023e-09,9.056857269377155e-08,5.726606286433696e-08,1.051808801346767e-07,4.328461799387687e-08,6.20322874089625e-07,1.892706738973736e-07,2.592380152496751e-08,6.370407482912332e-07,2.949441756509211e-07,6.798099524818907e-07,2.548830110910762e-07,1.38694495132409e-06,1.532000757975933e-06,3.847698711152491e-07,3.431703949600617e-07,1.240253519939779e-06,5.551815405220169e-07,1.094363916635748e-06,1.773622280563115e-06,8.415737411734686e-08,2.043988254103271e-07,3.206940761871232e-07,1.671530706496582e-06,2.472011040039955e-06,1.029840199792565e-06,1.893311528057358e-06,6.985839085076124e-07,1.657715538412078e-06,1.346992882029129e-06,1.539110849852302e-07,1.825375497912447e-06,1.480459257017908e-06,6.09875987122901e-07,4.948950467718786e-07,1.030747584478199e-06,2.531673643987408e-07,7.112149526462778e-08,1.5507107366458e-06,7.176348852778198e-07,4.318808497033016e-07,1.489289700395309e-06,8.972908201670114e-07,4.384321550699626e-07,5.915790263172542e-07,1.630625973758798e-07,1.097233769516062e-06,2.301264886883349e-07,2.115230437763954e-07,5.681064944620252e-07,2.46398986397026e-06,7.612390522698293e-07,1.450302076670933e-06,2.885874161344303e-06,8.394403315961767e-07,8.224646177932267e-07,1.690864816241376e-06,1.430219460011077e-06,2.346221344573039e-06,3.567918214351983e-06,3.190883290004751e-06,2.356898847589934e-06,2.716305617783034e-06,2.070286767503028e-06,1.087476076705202e-06,6.919025574031565e-07,1.128330544392819e-07,7.983574997326362e-08,3.519771132337827e-08,1.286404717553903e-07,4.166496548375035e-07,5.154932219982985e-08,8.852954077467505e-08,1.897693836191208e-06,9.762145087943742e-07,1.915799749594176e-07,6.81334712619708e-07,2.601521073036029e-06,3.211211280533509e-07,6.424132779133933e-07,3.204756443851129e-07,1.560974095861351e-06,7.556028925125471e-07,2.93994085778665e-06,2.317086836830762e-06,3.24197751244036e-07,4.722518078203421e-07,1.047683528573456e-06,1.044450239274406e-06,4.30115179233039e-09,1.60170056862522e-08,9.409358023797568e-07,1.248433292295764e-06,2.432542842223933e-06,9.294665645046552e-07,9.525408765264329e-07,2.162828303733955e-06,9.796725833977744e-07,1.41603257182757e-06,1.945997785373929e-06,1.067556720928292e-06,2.295222826792951e-06,1.389476379674632e-06,2.038935088503858e-06,2.686898391984566e-06,2.606573997363201e-06,3.420484388282711e-06,1.221179903790976e-06,1.941717334337739e-06,1.998725058971436e-06,3.621037917249162e-06,2.756177464057926e-06,2.396955749673525e-06,3.191593836753927e-06,2.222898416496129e-06,3.135775905963728e-06,3.094545696973094e-06,2.308754138086146e-06,3.486689491160035e-06,2.735948676632181e-06,3.422533593847961e-06,3.058280468577859e-06,3.141325971743081e-06,3.389681161298935e-06,2.924405338201114e-06,3.447472699018933e-06,3.35444817597395e-06,3.328796513451797e-06,3.3770175856198e-06,3.24924624081506e-06,3.431650467587238e-06,3.239779522326613e-06,3.158921956265105e-06,2.688218794534419e-06,2.571136935934535e-06,2.720798428603173e-06,3.008656800449967e-06,2.589779680073297e-06,3.090713489548284e-06,3.111110242665669e-06,2.393841407589194e-06,2.485404062127128e-06,2.933022778401922e-06,2.643061276644058e-06,2.729091196791937e-06,2.7958345780385e-06,2.971122882188491e-06,3.003372536255901e-06,2.751959784016386e-06,2.753997891058559e-06,3.381243871037929e-06,2.98505032228905e-06,2.906256840247643e-06,3.010825435774416e-06,3.360697127010841e-06,3.107052043575303e-06,2.971585320650037e-06,3.226983246915034e-06,3.212559188118814e-06,3.022115368162559e-06,2.331823906147389e-06,1.427133748899321e-06,2.465707078932161e-06,2.797071500393035e-06,2.876304339184951e-06,3.010895806844652e-06,3.236956637109175e-06,3.209150011356218e-06,2.79396793513546e-06,2.756323112067292e-06,3.104266555555191e-06,3.204903619918021e-06,2.781041453137927e-06,2.578405624097193e-06,2.661776161182822e-06,3.111575093849624e-06,2.801864373456658e-06,2.715455454830512e-06,2.680213542432618e-06,2.588972021247196e-06,2.766476652201237e-06,2.748225734181544e-06,2.910707348001561e-06,2.682509448864094e-06,2.364207064188046e-06,2.706963074074522e-06,3.01308495030957e-06,2.847426183198532e-06,2.526428465896353e-06,2.379955506526093e-06,2.966208970884064e-06,2.924132700569002e-06,2.954722401619664e-06,2.372292096977473e-06,2.771920799466877e-06,2.715075491263283e-06,2.733251775736485e-06,2.637931346260028e-06,2.481632977003321e-06,2.517454545959753e-06,2.290859659590205e-06,2.107332069264829e-06,2.038904849049677e-06,2.115801086825502e-06,2.152968874461554e-06,2.341870401830494e-06,2.485832722474962e-06,2.48949077155395e-06,2.243753265174727e-06,2.199865764147931e-06,2.190001750702956e-06,2.162933257158706e-06,2.228332993296218e-06,2.327342877455008e-06,2.345700035684736e-06,2.392619122417268e-06,2.423130490413747e-06,2.4555244654932e-06,2.467641760607109e-06,2.489093154901101e-06,2.452289607924586e-06,2.400743844490309e-06,2.364552887733202e-06,2.382105724736161e-06,2.365712683394759e-06,2.316531186860184e-06,2.285427173816204e-06])
    jsc=np.interp(lam,a,e)
    return(jsc)

def cf_photosic_reference(X):
    lam_min=375
    lam_max=750
    n_lam=100
    theta=0*pi/180
    vlam=np.linspace(lam_min,lam_max,n_lam)
    scc=np.zeros(n_lam)
    Ab=np.zeros(n_lam)
    for k in range(n_lam):
        lam=vlam[k]
        Epsilon=np.array([1,2,3,epscSi(lam)],dtype=complex)
        Mu=np.ones(Epsilon.size)
        Type=np.append(0,np.append(np.tile(np.array([1,2]),int(X.size/2)),3))
        hauteur=np.append(0,np.append(X,30000))
        pol=0
        if pol==0:
            f=Mu
        else:
            f=Epsilon
        k0=2*pi/lam
        g=Type.size
        alpha=np.sqrt(Epsilon[Type[0]]*Mu[Type[0]])*k0*sin(theta)
        gamma=np.sqrt(Epsilon[Type]*Mu[Type]*k0**2-np.ones(g)*alpha**2)
        if np.real(Epsilon[Type[0]])<0 and np.real(Mu[Type[0]])<0 :
            gamma[0]=-gamma[0]
        if g>2:
            gamma[1:g-2]=gamma[1:g-2]*(1-2*(np.imag(gamma[1:g-2])<0))
        if np.real(Epsilon[Type[g-1]])<0 and np.real(Mu[Type[g-1]])<0 and np.real(np.sqrt(Epsilon[Type[g-1]]*Mu[Type[g-1]]*k0**2-alpha**2))!=0:
            gamma[g-1]=-np.sqrt(Epsilon[Type[g-1]]*Mu[Type[g-1]]*k0**2-alpha**2)
        else :
            gamma[g-1]=np.sqrt(Epsilon[Type[g-1]]*Mu[Type[g-1]]*k0**2-alpha**2)
        T=np.zeros(((2*g,2,2)),dtype=complex)
        T[0]=[[0,1],[1,0]]
        for k2 in range(g-1):
            t=np.exp(i*gamma[k2]*hauteur[k2])
            T[2*k2+1]=[[0,t],[t,0]]
        #Interface scattering matrix
            b1=gamma[k2]/f[Type[k2]]
            b2=gamma[k2+1]/f[Type[k2+1]]
            T[2*k2+2]=[[(b1-b2)/(b1+b2),2*b2/(b1+b2)],[2*b1/(b1+b2),(b2-b1)/(b1+b2)]]
            t=np.exp(i*gamma[g-1]*hauteur[g-1])
            T[2*g-1]=[[0,t],[t,0]]
        H=np.zeros(((2*g-1,2,2)),dtype=complex)
        A=np.zeros(((2*g-1,2,2)),dtype=complex)
        H[0]=T[2*g-1]
        A[0]=T[0]
        for j in range(2*g-2):
            A[j+1]=cascade2(A[j],T[j+1])
            H[j+1]=cascade2(T[2*g-2-j],H[j])
        r=A[len(A)-1][0,0]
        t=A[len(A)-1][1,0]
        I=np.zeros(((2*g,2,2)),dtype=complex)
        for j in range(len(T)-1):
            I[j][0,0]=A[j][1,0]/(1-A[j][1,1]*H[len(T)-2-j][0,0])
            I[j][0,1]=A[j][1,1]*H[len(T)-2-j][0,1]/(1-A[j][1,1]*H[len(T)-2-j][0,0])
            I[j][1,0]=A[j][1,0]*H[len(T)-2-j][0,0]/(1-A[j][1,1]*H[len(T)-2-j][0,0])
            I[j][1,1]=H[len(T)-2-j][0,1]/(1-A[j][1,1]*H[len(T)-2-j][0,0])
        I[2*g-1][0,0]=I[2*g-2][0,0]*np.exp(i*gamma[g-1]*hauteur[g-1])
        I[2*g-1][0,1]=I[2*g-2][0,1]*np.exp(i*gamma[g-1]*hauteur[g-1])
        I[2*g-1][1,0]=0
        I[2*g-1][1,1]=0
        w=0
        poynting=np.zeros(2*g,dtype=complex)
        if pol==0: #TE
            for j in range(2*g):
                poynting[j]=np.real( (I[j][0,0]+I[j][1,0]) * np.conj( (I[j][0,0]-I[j][1,0] )*gamma[w]/Mu[Type[w]] )*Mu[Type[0]]/(gamma[0]))
                w=w+1-np.mod(j+1,2)
        else:       #TM
            for j in range(2*g):
                poynting[j]=np.real( (I[j][0,0]-I[j][1,0]) * np.conj( (I[j][0,0]+I[j][1,0] )*gamma[w]/Epsilon[Type[w]] )*Epsilon[Type[0]]/(gamma[0]))
                w=w+1-np.mod(j+1,2)
        tmp=abs(-np.diff(poynting))
        absorb=tmp[np.arange(0,2*g,2)]
        r=A[len(A)-1][0,0]
        t=A[len(A)-1][1,0]
        R=abs(r)**2
        T=abs(t)**2*gamma[g-1]*f[Type[0]]/(gamma[0]*f[Type[g-1]])
        scc[k]=solar(vlam[k])
        Ab[k]=absorb[len(absorb)-1]
    max_scc=np.trapz(scc,vlam)
    j_sc=np.trapz(scc*Ab,vlam)
    CE=j_sc/max_scc
    cost=1-CE
    return(cost)

def cf_photosic_realist(eps_and_d):
    dimension=int(eps_and_d.size/2)
    eps=eps_and_d[0:dimension]
    d=eps_and_d[dimension:dimension*2]
    epsd=np.array([eps,d])
    lam_min=375
    lam_max=750
    n_lam=100
    theta=0*180/pi
    vlam=np.linspace(lam_min,lam_max,n_lam)
    scc=np.zeros(n_lam)
    Ab=np.zeros(n_lam)
    #spectrum=np.zeros(n_lam)
    for k in range(n_lam):
        #absorb=absorption(epsd,theta*pi/180,lam[k])
        lam=vlam[k]
        Epsilon=np.append(1,np.append(epsd[0],epsSia(lam)))
        Mu=np.ones(Epsilon.size)
        Type=np.arange(0,epsd[0].size+2)
        hauteur=np.append(0,np.append(epsd[1],30000))
        pol=0
        # In order to get a phase that corresponds to the expected reflected coefficient,
        # we make the height of the upper (lossless) medium vanish. It changes only the
        # phase of the reflection coefficient, and nothing else (not the absorption, since
        # the medium is assumed lossless).

        if pol==0:
            f=Mu
        else:
            f=Epsilon
        k0=2*pi/lam
        g=Type.size
        alpha=np.sqrt(Epsilon[Type[0]]*Mu[Type[0]])*k0*sin(theta)
        gamma=np.sqrt(Epsilon[Type]*Mu[Type]*k0**2-np.ones(g)*alpha**2)
        # Be cautious if the upper medium is a negative index one.
        if np.real(Epsilon[Type[0]])<0 and np.real(Mu[Type[0]])<0 :
            gamma[0]=-gamma[0]
        # Changing the determination of the square root to achieve perfect stability
        if g>2:
            gamma[1:g-2]=gamma[1:g-2]*(1-2*(np.imag(gamma[1:g-2])<0))
    # Outgoing wave condition for the last medium
        if np.real(Epsilon[Type[g-1]])<0 and np.real(Mu[Type[g-1]])<0 and np.real(np.sqrt(Epsilon[Type[g-1]]*Mu[Type[g-1]]*k0**2-alpha**2))!=0:
            gamma[g-1]=-np.sqrt(Epsilon[Type[g-1]]*Mu[Type[g-1]]*k0**2-alpha**2)
        else :
            gamma[g-1]=np.sqrt(Epsilon[Type[g-1]]*Mu[Type[g-1]]*k0**2-alpha**2)
        T=np.zeros(((2*g,2,2)),dtype=complex)
        #first S matrice
        T[0]=[[0,1],[1,0]]
        for k2 in range(g-1):
        #Layer scattering matrix
            t=np.exp(i*gamma[k2]*hauteur[k2])
            T[2*k2+1]=[[0,t],[t,0]]
        #Interface scattering matrix
            b1=gamma[k2]/f[Type[k2]]
            b2=gamma[k2+1]/f[Type[k2+1]]
            T[2*k2+2]=[[(b1-b2)/(b1+b2),2*b2/(b1+b2)],[2*b1/(b1+b2),(b2-b1)/(b1+b2)]]
            t=np.exp(i*gamma[g-1]*hauteur[g-1])
            T[2*g-1]=[[0,t],[t,0]]
        # Once the scattering matrixes have been prepared, now let us combine them
        H=np.zeros(((2*g-1,2,2)),dtype=complex)
        A=np.zeros(((2*g-1,2,2)),dtype=complex)
        H[0]=T[2*g-1]
        A[0]=T[0]
        for j in range(2*g-2):
            A[j+1]=cascade(A[j],T[j+1])
            H[j+1]=cascade(T[2*g-2-j],H[j])
    #reflexion
        r=A[len(A)-1][0,0]
    #transmission
        t=A[len(A)-1][1,0]
        I=np.zeros(((2*g,2,2)),dtype=complex)
        #And let us compute the intermediate coefficients from the scattering matrixes
        for j in range(len(T)-1):
            I[j][0,0]=A[j][1,0]/(1-A[j][1,1]*H[len(T)-2-j][0,0])
            I[j][0,1]=A[j][1,1]*H[len(T)-2-j][0,1]/(1-A[j][1,1]*H[len(T)-2-j][0,0])
            I[j][1,0]=A[j][1,0]*H[len(T)-2-j][0,0]/(1-A[j][1,1]*H[len(T)-2-j][0,0])
            I[j][1,1]=H[len(T)-2-j][0,1]/(1-A[j][1,1]*H[len(T)-2-j][0,0])
        I[2*g-1][0,0]=I[2*g-2][0,0]*np.exp(i*gamma[g-1]*hauteur[g-1])
        I[2*g-1][0,1]=I[2*g-2][0,1]*np.exp(i*gamma[g-1]*hauteur[g-1])
        I[2*g-1][1,0]=0
        I[2*g-1][1,1]=0
        #________________________________
    #\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    # Computation of energy fluxes
    #////////////////////////////////
        # At the top and bottom of each layer
        w=0
        poynting=np.zeros(2*g,dtype=complex)
        if pol==0:  #TE
            for j in range(2*g):
                poynting[j]=np.real( (I[j][0,0]+I[j][1,0]) * np.conj( (I[j][0,0]-I[j][1,0] )*gamma[w]/Mu[Type[w]] )*Mu[Type[0]]/(gamma[0]))
                w=w+1-np.mod(j+1,2)
        else:       #TM
            for j in range(2*g):
                poynting[j]=np.real( (I[j][0,0]-I[j][1,0]) * np.conj( (I[j][0,0]+I[j][1,0] )*gamma[w]/Epsilon[Type[w]] )*Epsilon[Type[0]]/(gamma[0]))
                w=w+1-np.mod(j+1,2)
        # Absorption in each layer
        tmp=abs(-np.diff(poynting))
    #absorb=np.zeros(g,dtype=complex)
        absorb=tmp[np.arange(0,2*g,2)]
    # reflection coefficient of the whole structure
        r=A[len(A)-1][0,0]
    # transmission coefficient of the whole structure
        t=A[len(A)-1][1,0]
    # Energy reflexion coefficient;
        R=abs(r)**2
    # Energy transmission coefficient;
        T=abs(t)**2*gamma[g-1]*f[Type[0]]/(gamma[0]*f[Type[g-1]])

        scc[k]=solar(vlam[k])
        Ab[k]=absorb[len(absorb)-1]
    max_scc=np.trapz(scc,vlam)
    j_sc=np.trapz(scc*Ab,vlam)
    CE=j_sc/max_scc
    cost=1-CE
    return(cost)
